console.log(document.querySelector("li a"));
document.querySelector("button").style.backgroundColor="yellow";





// btn.addEventListener("click", myFunction);
// function myFunction() {
//   document.getElementById("demo").innerHTML = "Hello World";
// }

// document.querySelector("btn");
// btn.addEventListener("click",()=>{
//     "Yes"
// });

// SetTimeOut Exmaple.

// const btn = document.querySelector("button");

// const printName = (name,gender) => {
//     const income = Math.floor(Math.random() *10000);
//     console.log(
//         `Welcome , ${name}. Your Income is $${income}.Gender is ${gender}`
//         );
//     };
// // const customTimeout = setTimeout(printName,2000,"Dheeraj",2000,"Male");
// const customTimeout = setInterval(printName,2000,"Dheeraj",1000,"Male");

// btn.addEventListener("click",()=>{
//     clearTimeout(customTimeout);
// });


//Call Back Function

// function sum(a,b,c){
//     const result = a + b;
//     c(result)
// }

// function displaySum(result){
//     const h1 = document.querySelector("h1");
//     h1.innerText = result;
// }

// sum(20,30,displaySum);
// sum(20,130,alert);

// function dheeraj ()
// {
//     for(var i=0;i<10;i++)
//     {
//         console.log(i);
//     }
// }
// setInterval(dheeraj,1000);
//document.getElementsByClassName("list")[2].innerHTML="Netflix";
// console.log(document.firstElementChild.lastElementChild);

---- 03-04-2023---
    <!-- <form class="item" action="/todolist" method="post">
        <input  type="text" name="item" >
        <button  type="submit" name="add">Add</button>
    </form>
    <% function AutoRefresh() { %>
       <%  setTimeout("location.reload(true);",1000); %>
     <% } %>
    <% newItems.forEach(function(item){ %>
        <form id="box" action="/delete" method="post">
                <p><%=  item.name %><span> <button name="button" value= "<%= item._id%>" >delete</button></span></p>
        </form>
        <% }) %> -->

// app.get("/todolist",function(req,res){
//     Items.find({}).then((items)=>res.render("todolist",{ newItems: items}))
// })
 res.render('todolist', { userName: req.params.name, newItems: user.item })
 --- 04-04-2023---
 const express = require("express");
const bodyParser = require("body-parser");
const mongoose = require("mongoose");
const app = express();
app.set('view engine' ,'ejs');
app.use(express.static("public"));
app.use(bodyParser.urlencoded({extended:true}));
mongoose.connect("mongodb://127.0.0.1:27017/myfirstDB",{useNewUrlParser:true});
const itemSchema = new mongoose.Schema({
    itemname: String
  });
const Items = new mongoose.model("Items",itemSchema);
const userSchema = new mongoose.Schema({
    _id: {
        type: mongoose.Types.ObjectId,
        auto: true,
      },
    name: String,
    email: String,
    password: String,
    items: [itemSchema]
  });
app.get("/",function(req,res){
    res.render("home",{listTitle: " To Do List"})
});
app.get("/login",function(req,res){
    res.render("login",{ error:"Please Enter Password"});
});
app.get("/register",function(req,res){
    res.render("register");
});
app.post("/register",function(req,res){
    const User = new Users({
        name:req.body.name,
        email:req.body.email,
        password:req.body.password
    })
    User.save().then(()=>console.log("Success")).catch((err)=>console.log(err));

})
app.post("/login",function(req,res){
    const email = req.body.email;
    const password = req.body.password;
    Users.findOne({email:email})
    .then((user)=>{
        if(user === null){
            res.render("login",{ error:"User Not Found"})
        }else if(user.password != password){
            res.render("login",{error:"Wrong password"})
        }else{
            const name = user.name;
            res.redirect(`/todolist/${name}`);
        }
    })
    .catch((err)=>console.log(err));
});
app.post('/todolist/:name', function(req, res) {
    const itemName = req.body.item;
    const userName = req.params.name;
    console.log(itemName);
    //Find the user in the database
    Users.findOne({ name: userName }).then((foundUser) =>
    {
        if(foundUser) { // check if foundUser is not null or undefined
            foundUser.items.push({ itemname: itemName }); // wrap the item name in an object
            foundUser.save();
        }
    });
    res.redirect('/todolist/' + userName);
})
app.get('/todolist/:name', function(req, res) {
    const userName = req.params.name;
    Users.findOne({name: userName}).then((user) => {
        if (user) {
            res.render("todolist", {userName: userName, newItems: user.items});
        } else {
            res.status(404).send('User not found');
        }
    }).catch((err) => console.log(err));
});
app.post('/delete/:name', async function(req, res) {
    const itemId = req.body.deleteButton;
    console.log('itemId:', itemId);
    const user = await Users.findOneAndUpdate(
        { name: req.params.name },
        { $pull: { items: { _id: itemId } } },
        { new: true }
    );
    if (user) {
        console.log('Item successfully deleted from user:', user);
        res.redirect(`/todolist/${req.params.name}`);
    } else {
        console.log('User not found');
        res.status(404).send('User not found');
    }
});
app.listen("3000",function(){
    console.log("Server Running On Port 3000");
}) 
